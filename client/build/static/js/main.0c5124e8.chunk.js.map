{"version":3,"sources":["Utils/API.js","Pages/MockJson.js","App.js","reportWebVitals.js","index.js"],"names":["getMockJson","axios","get","id","delete","MockJsonData","post","MockJson","state","json","createdID","handleInputChange","event","target","name","value","setState","reloadInputs","data","console","log","_id","handleFormSubmit","preventDefault","IsJsonString","API","saveMockJson","then","res","catch","err","alert","str","JSON","parse","e","this","className","onChange","placeholder","disabled","onClick","length","to","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","exact","path","element","document","getElementById"],"mappings":"qPAEA,MAECA,YAAa,WACZ,OAAOC,IAAMC,IAAI,oBAHnB,6BAMc,SAASC,GACrB,OAAOF,IAAMC,IAAI,kBAAoBC,MAPvC,gCAUiB,SAASA,GACxB,OAAOF,IAAMG,OAAO,kBAAoBD,MAX1C,8BAce,SAASE,GACtB,OAAOJ,IAAMK,KAAK,iBAAkBD,MAftC,G,eCEME,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,UAAW,I,EAGbC,kBAAoB,SAACC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGF,EAAOC,K,EAIZE,aAAe,SAACC,GACdC,QAAQC,IAAI,oBACZ,EAAKJ,SAAS,CACZP,KAAM,GACNC,UAAWQ,EAAKG,MAElBF,QAAQC,IAAI,EAAKZ,MAAME,Y,EAYzBY,iBAAmB,SAACV,GAClBA,EAAMW,iBACNJ,QAAQC,IAAI,kBACR,EAAKZ,MAAMC,OACT,EAAKe,aAAa,EAAKhB,MAAMC,MAC/BgB,EAAIC,aAAa,CACfjB,KAAM,EAAKD,MAAMC,OAEhBkB,MAAK,SAACC,GAAD,OAAS,EAAKX,aAAaW,EAAIV,SACpCW,OAAM,SAACC,GAAD,OAASX,QAAQC,IAAIU,MAE9BC,MAAM,wB,kDApBZ,SAAaC,GACX,IACEC,KAAKC,MAAMF,GACX,MAAOG,GACP,OAAO,EAET,OAAO,I,oBAmBT,WACE,IAAMzB,EAAY0B,KAAK5B,MAAME,UAC7B,OACE,sBAAK2B,UAAU,6CAAf,UACE,oBAAIA,UAAU,6BAAd,iCAEA,sBAAKA,UAAU,gEAAf,UACE,8BAEE,0BACEtB,MAAOqB,KAAK5B,MAAMC,KAClB6B,SAAUF,KAAKzB,kBACfG,KAAK,OACLyB,YAAY,kBACrBF,UAAU,iBAIX,8BACM,wBAAQG,UAAWJ,KAAK5B,MAAMC,KAAMgC,QAASL,KAAKd,iBAAlD,kCASAZ,EAAUgC,OAAS,EACjB,gCACE,gEACA,eAAC,IAAD,CAAMC,GAAI,IAAMP,KAAK5B,MAAME,UAA3B,mCACyB0B,KAAK5B,MAAME,gBAItC,+B,GAnFWkC,aA4FRrC,IClFAsC,MATf,WACE,OACE,cAAC,EAAD,KCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCGdO,IAASC,OACT,cAAC,IAAD,UACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAQC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,WAIrCC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.0c5124e8.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default {\n\t// Gets all MockJsons\n\tgetMockJson: function() {\n\t\treturn axios.get('/api/MockJsons');\n\t},\n\t// Gets the MockJson with the given id\n\tgetMockJson: function(id) {\n\t\treturn axios.get('/api/MockJsons/' + id);\n\t},\n\t// Deletes the MockJson with the given id\n\tdeleteMockJson: function(id) {\n\t\treturn axios.delete('/api/MockJsons/' + id);\n\t},\n\t// Saves a MockJson to the database\n\tsaveMockJson: function(MockJsonData) {\n\t\treturn axios.post('/api/MockJsons', MockJsonData);\n\t}\n};\n","import React, { Component } from \"react\";\n\nimport API from \"../Utils/API\";\nimport { Link } from \"react-router-dom\";\nclass MockJson extends Component {\n  state = {\n    json: \"\",\n    createdID: \"\",\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  reloadInputs = (data) => {\n    console.log(\"reloading inputs\");\n    this.setState({\n      json: \"\",\n      createdID: data._id,\n    });\n    console.log(this.state.createdID);\n  };\n\n  IsJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"form submitted\");\n    if (this.state.json) {\n      if (this.IsJsonString(this.state.json)) {\n        API.saveMockJson({\n          json: this.state.json,\n        })\n          .then((res) => this.reloadInputs(res.data))\n          .catch((err) => console.log(err));\n      } else {\n        alert(\"enter a valid json\");\n      }\n    }\n  };\n\n  render() {\n    const createdID = this.state.createdID;\n    return (\n      <div className=\"content-center justify-center  bg-gray-600\">\n        <h1 className=\"font-extrabold text-center\">Add a new json mock</h1>\n\n        <div className=\"bg-red-300 m-auto w-96 content-center justify-center flex-col\">\n          <div >\n            \n            <textarea\n              value={this.state.json}\n              onChange={this.handleInputChange}\n              name=\"json\"\n              placeholder=\"JSON (required)\"\n\t\t\t  className=\"h-40 w-1/2\"\n            />\n          </div>\n\n\t\t  <div>\n          <button disabled={!this.state.json} onClick={this.handleFormSubmit}>\n            Submit MockJson\n          </button>\n\t\t  </div>\n          \n\n        </div>\n\n        {\n          createdID.length > 0 ? (\n            <div>\n              <h2>Check out your mock json here:</h2>\n              <Link to={\"/\" + this.state.createdID}>\n                http://localhost:3000/{this.state.createdID}\n              </Link>\n            </div>\n          ) : (\n            <div></div>\n          )\n          // href={\"http:localhost:3000/\"+this.state.createdID\n        }\n      </div>\n    );\n  }\n}\n\nexport default MockJson;\n","\nimport './App.css';\nimport MockJson from './Pages/MockJson';\n\n\nfunction App() {\n  return (\n    <MockJson>\n\n      \n    </MockJson>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter,Routes,\n  Route } from \"react-router-dom\";\nimport MockJson from './Pages/MockJson';\n\n\nReactDOM.render(\n<BrowserRouter>\n    <Routes>\n      <Route  exact path=\"/\" element={<App />} />\n      <Route path=\"/v0.1/:id\" element={<MockJson />} />\n      {/* <Route path=\"/hey\" element={<Books />} /> */}\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}