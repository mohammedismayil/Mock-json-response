{"version":3,"sources":["pages/Mocks.js","components/Typography/PageTitle.js","components/CTA.js","components/Typography/SectionTitle.js","utils/demo/tableData.js"],"names":["Mocks","React","useState","showModal","setShowModal","pageTable1","pageTable2","setPageTable2","setDataTable1","dataTable2","totalResults","response","length","useEffect","slice","className","onClick","console","log","API","backupAllMocks","then","res","catch","err","map","user","i","key","src","avatar","alt","name","job","amount","type","status","Date","date","toLocaleDateString","layout","size","resultsPerPage","onChange","p","label","PageTitle","children","CTA","href","fill","viewBox","d","dangerouslySetInnerHTML","__html","SectionTitle"],"mappings":"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","file":"static/js/8.815e9974.chunk.js","sourcesContent":["// import React from \"react\";\n\nimport API from \"../utils/API\";\nimport React, { useState, useEffect } from \"react\";\n\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport SectionTitle from \"../components/Typography/SectionTitle\";\nimport CTA from \"../components/CTA\";\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  TableRow,\n  TableFooter,\n  TableContainer,\n  Badge,\n  Avatar,\n  Button,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport { EditIcon, TrashIcon } from \"../icons\";\nimport response from \"../utils/demo/tableData\";\nexport default function Mocks() {\n  const [showModal, setShowModal] = React.useState(false);\n  // setup pages control for every table\n  const [pageTable1, setPageTable1] = useState(1);\n  const [pageTable2, setPageTable2] = useState(1);\n\n  // setup data for every table\n  const [dataTable1, setDataTable1] = useState([]);\n  const [dataTable2, setDataTable2] = useState([]);\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const totalResults = response.length;\n\n  // pagination change control\n  function onPageChangeTable1(p) {\n    setPageTable1(p);\n  }\n\n  // pagination change control\n  function onPageChangeTable2(p) {\n    setPageTable2(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setDataTable1(\n      response.slice(\n        (pageTable1 - 1) * resultsPerPage,\n        pageTable1 * resultsPerPage\n      )\n    );\n  }, [pageTable1]);\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    // setDataTable2(\n    //   response2.slice(\n    //     (pageTable2 - 1) * resultsPerPage,\n    //     pageTable2 * resultsPerPage\n    //   )\n    // );\n  }, [pageTable2]);\n  function showConfirm() {\n    setShowModal(true);\n  }\n  function deleteAllMocks() {\n    console.log(\"pro logging-- deleting the entire collection\");\n\n    API.deleteAllMocks()\n      .then((res) => console.log(\"deleting all mocks\"))\n      .catch((err) => console.log(err));\n    setShowModal(false);\n  }\n  function backupAllMocks() {\n    console.log(\"pro logging-- deleting the entire collection\");\n\n    API.backupAllMocks()\n      .then((res) => console.log(\"backedup  all mocks\"))\n      .catch((err) => console.log(err));\n  }\n  return (\n    <>\n      <div className=\"flex-wrap\">\n        {/* <div className=\"content-center justify-center\"> */}\n        {/* <h1 className=\"font-bold text-3xl text-center\">Admin</h1> */}\n        {/* <div className=\"\"> */}\n\n        <div className=\" flex  rounded-2xl content-center m-auto w-1/2\">\n          <div className=\"p-5\">\n            <button\n              className=\"bg-purple-500 pl-5 pr-5 pt-2 pb-2 mt-5 rounded-lg text-white w-full\"\n              onClick={backupAllMocks}\n            >\n              Download Backup\n            </button>\n          </div>\n\n          <div className=\"p-5\">\n            <button\n              className=\"bg-white pl-5 pr-5 pt-2 pb-2 mt-5 rounded-lg text-purple-500 w-full\"\n              onClick={showConfirm}\n            >\n              Delete all mocks\n            </button>\n          </div>\n        </div>\n\n        {/* </div> */}\n        {/* </div> */}\n\n        <div>\n          <TableContainer className=\"mb-8\">\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>Client</TableCell>\n                  <TableCell>Amount</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Actions</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {dataTable2.map((user, i) => (\n                  <TableRow key={i}>\n                    <TableCell>\n                      <div className=\"flex items-center text-sm\">\n                        <Avatar\n                          className=\"hidden mr-3 md:block\"\n                          src={user.avatar}\n                          alt=\"User avatar\"\n                        />\n                        <div>\n                          <p className=\"font-semibold\">{user.name}</p>\n                          <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                            {user.job}\n                          </p>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">$ {user.amount}</span>\n                    </TableCell>\n                    <TableCell>\n                      <Badge type={user.status}>{user.status}</Badge>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {new Date(user.date).toLocaleDateString()}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center space-x-4\">\n                        <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                          <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Button>\n                        <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\">\n                          <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n            <TableFooter>\n              <Pagination\n                totalResults={totalResults}\n                resultsPerPage={resultsPerPage}\n                onChange={onPageChangeTable2}\n                label=\"Table navigation\"\n              />\n            </TableFooter>\n          </TableContainer>\n        </div>\n      </div>\n\n      {showModal ? <modalNew setShowModal={true}></modalNew> : null}\n    </>\n  );\n}\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React from 'react'\n\nfunction CTA() {\n  return (\n    <a\n      className=\"flex items-center justify-between p-4 mb-8 text-sm font-semibold text-purple-100 bg-purple-600 rounded-lg shadow-md focus:outline-none focus:shadow-outline-purple\"\n      href=\"https://github.com/estevanmaito/windmill-dashboard-react\"\n    >\n      <div className=\"flex items-center\">\n        <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"></path>\n        </svg>\n        <span>Star this project on GitHub</span>\n      </div>\n      <span>\n        View more <span dangerouslySetInnerHTML={{ __html: '&RightArrow;' }}></span>\n      </span>\n    </a>\n  )\n}\n\nexport default CTA\n","import React from 'react'\n\nfunction SectionTitle({ children }) {\n  return <h2 className=\"mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>\n}\n\nexport default SectionTitle\n","export default [\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/lokesh_coder/128.jpg',\n    name: 'Chandler Jacobi',\n    job: 'Direct Security Executive',\n    amount: 989.4,\n    status: 'primary',\n    date: 'Mon Feb 03 2020 04:13:15 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg',\n    name: 'Monserrat Marquardt',\n    job: 'Forward Accountability Producer',\n    amount: 471.44,\n    status: 'danger',\n    date: 'Fri Nov 29 2019 10:43:17 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jjsiii/128.jpg',\n    name: 'Lonie Wyman',\n    job: 'Legacy Program Director',\n    amount: 934.24,\n    status: 'success',\n    date: 'Fri Apr 03 2020 03:07:53 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/holdenweb/128.jpg',\n    name: 'Corine Abernathy',\n    job: 'Chief Factors Planner',\n    amount: 351.28,\n    status: 'warning',\n    date: 'Fri Jun 21 2019 20:21:55 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/operatino/128.jpg',\n    name: 'Lorenz Botsford',\n    job: 'Central Accountability Developer',\n    amount: 355.3,\n    status: 'neutral',\n    date: 'Wed Aug 28 2019 15:31:43 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/akmur/128.jpg',\n    name: 'Everette Botsford',\n    job: 'Product Group Architect',\n    amount: 525.42,\n    status: 'success',\n    date: 'Thu Jan 16 2020 09:53:33 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nateschulte/128.jpg',\n    name: 'Marilou Beahan',\n    job: 'Future Security Planner',\n    amount: 414.99,\n    status: 'success',\n    date: 'Mon Oct 28 2019 14:44:31 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jerrybai1907/128.jpg',\n    name: 'Ceasar Sauer',\n    job: 'Direct Brand Specialist',\n    amount: 488.0,\n    status: 'primary',\n    date: 'Tue Jul 23 2019 00:24:44 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg',\n    name: 'Rae McDermott',\n    job: 'Lead Branding Engineer',\n    amount: 502.69,\n    status: 'danger',\n    date: 'Sat Feb 01 2020 12:57:03 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/rtgibbons/128.jpg',\n    name: 'Mable Steuber',\n    job: 'National Group Executive',\n    amount: 911.09,\n    status: 'danger',\n    date: 'Mon Sep 09 2019 12:03:25 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danthms/128.jpg',\n    name: 'Julian Glover',\n    job: 'Global Branding Assistant',\n    amount: 656.94,\n    status: 'danger',\n    date: 'Fri May 22 2020 17:46:12 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/andysolomon/128.jpg',\n    name: 'Duncan Toy',\n    job: 'Central Intranet Manager',\n    amount: 120.78,\n    status: 'danger',\n    date: 'Sun Nov 17 2019 11:59:50 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg',\n    name: 'Blanche Friesen',\n    job: 'Forward Identity Executive',\n    amount: 676.95,\n    status: 'danger',\n    date: 'Sun Jun 21 2020 16:46:39 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/haruintesettden/128.jpg',\n    name: 'Orion Koepp',\n    job: 'Global Accountability Strategist',\n    amount: 447.56,\n    status: 'danger',\n    date: 'Thu Jun 04 2020 18:29:41 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg',\n    name: 'Dakota Vandervort',\n    job: 'Future Assurance Coordinator',\n    amount: 765.22,\n    status: 'danger',\n    date: 'Fri Jan 31 2020 13:02:55 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/zaki3d/128.jpg',\n    name: 'Lily Collier',\n    job: 'Forward Configuration Orchestrator',\n    amount: 449.11,\n    status: 'danger',\n    date: 'Sun Aug 18 2019 14:52:01 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/evanshajed/128.jpg',\n    name: 'Kayleigh Schumm',\n    job: 'Central Division Agent',\n    amount: 65.54,\n    status: 'danger',\n    date: 'Wed May 06 2020 17:49:09 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mdsisto/128.jpg',\n    name: 'General McGlynn',\n    job: 'Central Web Analyst',\n    amount: 30.51,\n    status: 'danger',\n    date: 'Mon Mar 30 2020 01:24:54 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/woodydotmx/128.jpg',\n    name: 'Shayna Schumm',\n    job: 'Future Directives Engineer',\n    amount: 313.73,\n    status: 'danger',\n    date: 'Wed Jul 03 2019 10:01:06 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mfacchinello/128.jpg',\n    name: 'Giovanna Sanford',\n    job: 'Dynamic Interactions Executive',\n    amount: 398.3,\n    status: 'danger',\n    date: 'Tue Oct 08 2019 17:08:43 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ademilter/128.jpg',\n    name: 'Emie Mante',\n    job: 'Direct Factors Supervisor',\n    amount: 142.51,\n    status: 'danger',\n    date: 'Wed Jul 24 2019 19:17:16 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/tobysaxon/128.jpg',\n    name: 'Chance Muller',\n    job: 'Lead Usability Planner',\n    amount: 963.26,\n    status: 'danger',\n    date: 'Sun Dec 01 2019 14:04:10 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg',\n    name: 'Armani Torphy',\n    job: 'Forward Functionality Analyst',\n    amount: 445.23,\n    status: 'danger',\n    date: 'Tue Dec 24 2019 13:28:36 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/devinhalladay/128.jpg',\n    name: 'Braeden Ward',\n    job: 'Central Integration Director',\n    amount: 588.53,\n    status: 'danger',\n    date: 'Wed Apr 15 2020 21:40:11 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kimcool/128.jpg',\n    name: 'Malcolm Price',\n    job: 'District Program Planner',\n    amount: 181.93,\n    status: 'danger',\n    date: 'Thu Oct 24 2019 07:09:03 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg',\n    name: 'Susan Jast',\n    job: 'Future Paradigm Associate',\n    amount: 928.41,\n    status: 'danger',\n    date: 'Sun Feb 09 2020 23:22:23 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/peachananr/128.jpg',\n    name: 'Torrey Reynolds',\n    job: 'Lead Security Agent',\n    amount: 447.37,\n    status: 'danger',\n    date: 'Mon Oct 28 2019 04:10:39 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/agromov/128.jpg',\n    name: 'Travon Harber',\n    job: 'Legacy Marketing Facilitator',\n    amount: 422.48,\n    status: 'danger',\n    date: 'Sat Nov 09 2019 05:04:09 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danpliego/128.jpg',\n    name: 'Hattie Gutkowski',\n    job: 'Chief Configuration Supervisor',\n    amount: 714.34,\n    status: 'danger',\n    date: 'Tue Oct 22 2019 22:36:23 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg',\n    name: 'Demarco Lang',\n    job: 'Investor Program Designer',\n    amount: 536.92,\n    status: 'danger',\n    date: 'Wed Apr 08 2020 03:05:59 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nasirwd/128.jpg',\n    name: 'Glennie Ziemann',\n    job: 'Dynamic Interactions Analyst',\n    amount: 597.25,\n    status: 'danger',\n    date: 'Mon Jun 22 2020 21:27:06 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/juaumlol/128.jpg',\n    name: 'Alta Howe',\n    job: 'District Intranet Executive',\n    amount: 42.28,\n    status: 'danger',\n    date: 'Sat Oct 12 2019 22:57:22 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/victordeanda/128.jpg',\n    name: 'Sydnee Gottlieb',\n    job: 'Global Response Specialist',\n    amount: 868.92,\n    status: 'danger',\n    date: 'Wed Feb 05 2020 05:17:34 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/baumannzone/128.jpg',\n    name: 'Arlene Schmitt',\n    job: 'Lead Metrics Consultant',\n    amount: 364.68,\n    status: 'danger',\n    date: 'Thu Oct 03 2019 08:47:32 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/chacky14/128.jpg',\n    name: 'Hilda Schoen',\n    job: 'National Solutions Facilitator',\n    amount: 260.91,\n    status: 'danger',\n    date: 'Wed Dec 04 2019 06:28:30 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kostaspt/128.jpg',\n    name: 'Chase Bahringer',\n    job: 'Dynamic Communications Designer',\n    amount: 454.61,\n    status: 'danger',\n    date: 'Mon Nov 25 2019 16:59:38 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/timgthomas/128.jpg',\n    name: 'Lucile Hansen',\n    job: 'Customer Usability Facilitator',\n    amount: 982.22,\n    status: 'danger',\n    date: 'Sun Aug 25 2019 17:15:59 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/safrankov/128.jpg',\n    name: 'Mollie Heaney',\n    job: 'Forward Communications Director',\n    amount: 390.33,\n    status: 'danger',\n    date: 'Mon Jul 22 2019 01:45:19 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/justme_timothyg/128.jpg',\n    name: 'Bennie Kuvalis',\n    job: 'Future Factors Agent',\n    amount: 456.64,\n    status: 'danger',\n    date: 'Sat Feb 08 2020 07:55:08 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/Chakintosh/128.jpg',\n    name: 'Jodie Luettgen',\n    job: 'Customer Implementation Associate',\n    amount: 398.37,\n    status: 'danger',\n    date: 'Tue Jun 09 2020 11:19:53 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/weavermedia/128.jpg',\n    name: 'Bethel Quitzon',\n    job: 'Dynamic Web Strategist',\n    amount: 183.58,\n    status: 'danger',\n    date: 'Sun Dec 29 2019 18:56:54 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/gmourier/128.jpg',\n    name: 'Jon Dietrich',\n    job: 'Legacy Creative Planner',\n    amount: 439.01,\n    status: 'danger',\n    date: 'Sun Dec 29 2019 11:11:34 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/stefvdham/128.jpg',\n    name: 'Nakia Kihn',\n    job: 'Central Interactions Coordinator',\n    amount: 824.12,\n    status: 'danger',\n    date: 'Sun Sep 15 2019 06:43:56 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg',\n    name: 'Assunta Grady',\n    job: 'Investor Operations Specialist',\n    amount: 172.97,\n    status: 'danger',\n    date: 'Tue Dec 17 2019 01:46:37 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nehfy/128.jpg',\n    name: 'Lukas Klocko',\n    job: 'Human Usability Associate',\n    amount: 515.74,\n    status: 'danger',\n    date: 'Mon Jun 15 2020 04:04:32 GMT-0300 (Brasilia Standard Time)',\n  },\n]\n"],"sourceRoot":""}